(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{365:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("h2",{attrs:{id:"what-s-v8n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-s-v8n","aria-hidden":"true"}},[t._v("#")]),t._v(" What's v8n?")]),t._v(" "),e("p",[t._v("v8n aims to be the most fluent and simple validation library for use in any\ncontext. The API is beautifully readable and allows for easy creation of complex\nvalidations in any part of your app. Even though there are many useful default\nvalidation methods, it's a breeze to add your own fluent rules to v8n and use\nthem anywhere in your app.")]),t._v(" "),e("p",[t._v('The name v8n is actually derived from the structure of the word "validation". If\nyou look closely you will find that between the '),e("em",[t._v("v")]),t._v(" and the "),e("em",[t._v("n")]),t._v(" in there are\nprecisely 8 letters ("),e("em",[t._v("a l i d a t i o")]),t._v("). So we get from the sort of boring word\n"),e("em",[t._v("validation")]),t._v(" to the very nice looking acronym "),e("strong",[t._v("v8n")]),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"features"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#features","aria-hidden":"true"}},[t._v("#")]),t._v(" Features")]),t._v(" "),e("ul",[e("li",[t._v("Fluent and chainable API")]),t._v(" "),e("li",[t._v("Useful standard validation rules (30+)")]),t._v(" "),e("li",[t._v("Custom validations rules")]),t._v(" "),e("li",[t._v("Asynchronous validation")]),t._v(" "),e("li",[t._v("Reusability")]),t._v(" "),e("li",[t._v("TypeScript support")])]),t._v(" "),e("h2",{attrs:{id:"getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-started","aria-hidden":"true"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),e("p",[t._v("Using v8n is supposed to be easy and intuitive. Aside from usage in the browser\nwith versions hosted on popular CDN services, you can import the library into\nyour codebase with "),e("code",[t._v("import")]),t._v(" or "),e("code",[t._v("require")]),t._v(" depending on how bleeding-edge you\nare.")]),t._v(" "),e("p",[t._v("The example below shows one way to get started. Simply create an "),e("code",[t._v(".html")]),t._v(" file\nand add this to it. Now you will be able to use "),e("code",[t._v("v8n()")]),t._v(" anywhere on that page\nright away.")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://unpkg.com/v8n/dist/v8n.min.js"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script language-javascript"}}),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("This is just the most straightforward approach without any build setup or\ncomplex imports. The "),e("RouterLink",{attrs:{to:"/Installation.html"}},[t._v("Installation")]),t._v(" page gives you an overview\nof all the available installation methods.")],1),t._v(" "),e("p",[t._v("After you've included v8n in some way you can use it very easily.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("v8n")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'My string!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),e("h2",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),e("h3",{attrs:{id:"fluent-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fluent-api","aria-hidden":"true"}},[t._v("#")]),t._v(" Fluent API")]),t._v(" "),e("p",[t._v("One of the main goals of v8n is its simple and fluent usage. You simply chain\nyour rules and build even incredibly complex rules with easy. You can chain any\nnumber of built-in rules and even combine them with your own custom rules in the\nsame way. Make sure to check out all the\n"),e("RouterLink",{attrs:{to:"/api/#built-in-rules"}},[t._v("built-in rules")]),t._v(" and how you can add your own.")],1),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("v8n")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("first")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'H'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("last")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'o'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),e("p",[t._v("The code above simply validates that the given value is a string, it's first\ncharacter is "),e("code",[t._v("H")]),t._v(" and the last is "),e("code",[t._v("o")]),t._v(". Doesn't that look really readable? Be sure\nto read up on "),e("a",{attrs:{href:"#validation-strategies"}},[t._v("validation strategies")]),t._v(" after you wrote\nyour validations, so that you can leverage them to their full extent.")]),t._v(" "),e("h3",{attrs:{id:"typescript-support"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-support","aria-hidden":"true"}},[t._v("#")]),t._v(" TypeScript support")]),t._v(" "),e("p",[t._v("The v8n library comes with TypeScript support built in. When you import v8n in a\nTypeScript project, you will get full autocompletion and type support. This\nsupport also works in any other environments if your code editor supports it.\nThis means that intellisense works in everywhere, including places without any\nmodule loaders (like browsers importing the script from a CDN).")]),t._v(" "),e("h3",{attrs:{id:"custom-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-rules","aria-hidden":"true"}},[t._v("#")]),t._v(" Custom rules")]),t._v(" "),e("p",[t._v("Extending is at the core of v8n. And it's easy, too. All you do is pack your own\nvalidation into a function that returns a "),e("code",[t._v("boolean")]),t._v(". You can do as much logic\nin your rule as you like, all that matters is the boolean return and you're good\nto go. Once you created your function just add it using "),e("code",[t._v("extend()")]),t._v(". Take a look\nat the "),e("RouterLink",{attrs:{to:"/Extending.html"}},[t._v("Extending")]),t._v(" page for more details and different types of\nrules you might want to add.")],1),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("You can also create\n"),e("RouterLink",{attrs:{to:"/Validation.html#Asynchronous-validation"}},[t._v("Promise based validation rules")]),t._v(".")],1)]),t._v(" "),e("h3",{attrs:{id:"validation-strategies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#validation-strategies","aria-hidden":"true"}},[t._v("#")]),t._v(" Validation strategies")]),t._v(" "),e("p",[t._v("Sometimes you might not want a boolean return, maybe you're working in a\ntry-catch or you need to know which rules failed for the given value. You're\nin luck, v8n offers multiple validation strategies that give you great\nflexibility when writing your code and give your more than just true or false.\nIf you want to know more read up about all the\n"),e("RouterLink",{attrs:{to:"/Validation.html#strategies"}},[t._v("validation strategies")]),t._v(" and how to use them.")],1)])},[],!1,null,null,null);a.default=n.exports}}]);